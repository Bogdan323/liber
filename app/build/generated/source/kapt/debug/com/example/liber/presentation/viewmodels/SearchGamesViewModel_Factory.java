// Generated by Dagger (https://dagger.dev).
package com.example.liber.presentation.viewmodels;

import com.example.liber.domain.usecase.SearchGamesUseCase;
import com.example.liber.presentation.fragments.maincontent.searchgamesfragment.SearchGamesViewModel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchGamesViewModel_Factory implements Factory<SearchGamesViewModel> {
  private final Provider<SearchGamesUseCase> searchGamesUseCaseProvider;

  public SearchGamesViewModel_Factory(Provider<SearchGamesUseCase> searchGamesUseCaseProvider) {
    this.searchGamesUseCaseProvider = searchGamesUseCaseProvider;
  }

  @Override
  public SearchGamesViewModel get() {
    return newInstance(searchGamesUseCaseProvider.get());
  }

  public static SearchGamesViewModel_Factory create(
      Provider<SearchGamesUseCase> searchGamesUseCaseProvider) {
    return new SearchGamesViewModel_Factory(searchGamesUseCaseProvider);
  }

  public static SearchGamesViewModel newInstance(SearchGamesUseCase searchGamesUseCase) {
    return new SearchGamesViewModel(searchGamesUseCase);
  }
}
